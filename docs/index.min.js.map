{"version":3,"file":"index.min.js","sources":["../node_modules/.pnpm/svelte@3.44.0/node_modules/svelte/internal/index.mjs","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/functions/Vec3Func.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/Vec3.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/core/Geometry.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/core/Program.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/core/Renderer.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/functions/QuatFunc.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/functions/Vec4Func.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/Quat.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/functions/Mat4Func.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/Mat4.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/Euler.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/functions/EulerFunc.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/core/Transform.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/core/Camera.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/functions/Mat3Func.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/Mat3.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/core/Mesh.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/core/Texture.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/functions/Vec2Func.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/Vec2.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/extras/Sphere.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/extras/Orbit.js","../src/gl/loadTextureAsync.mjs","../src/Component.svelte","../src/gl/makeCamera.mjs","../src/gl/makeProgram.mjs"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n// TODO: when would I disableVertexAttribArray ?\n// TODO: use offset/stride if exists\n\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempVec3 = new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n\n        if (!attr.buffer) {\n            attr.buffer = this.gl.createBuffer();\n\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        this.gl.bufferData(attr.target, attr.data, this.gl.STATIC_DRAW);\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === 35674) numLoc = 2; // mat2\n            if (type === 35675) numLoc = 3; // mat3\n            if (type === 35676) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * numLoc;\n            const offset = numLoc === 1 ? 0 : numLoc * numLoc;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({ program, mode = this.gl.TRIANGLES }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, { name }) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * 2,\n                    this.instancedCount\n                );\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(mode, this.drawRange.count, this.attributes.index.type, this.attributes.index.offset + this.drawRange.start * 2);\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPosition() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        // if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return (isBoundsWarned = true);\n    }\n\n    computeBoundingBox(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const offset = attr.offset || 0;\n        const stride = attr.stride || attr.size;\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: check size of position (eg triangle with Vec2)\n        for (let i = offset, l = array.length; i < l; i += stride) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const offset = attr.offset || 0;\n        const stride = attr.stride || attr.size;\n\n        if (!this.bounds) this.computeBoundingBox(attr);\n\n        let maxRadiusSq = 0;\n        for (let i = offset, l = array.length; i < l; i += stride) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        for (let key in this.VAOs) {\n            this.gl.renderer.deleteVertexArray(this.VAOs[key]);\n            delete this.VAOs[key];\n        }\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}\n","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LESS,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as fist argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n\n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src)\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 35680:\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) this.gl = canvas.getContext('webgl', attributes);\n        if (!this.gl) console.error('unable to create webgl context');\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.gl.viewport(0, 0, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        modeRGB = modeRGB || this.gl.FUNC_ADD;\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let by = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bz = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if (1.0 - cosom > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0); // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot; // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0]) i = 1;\n        if (m[8] > m[i * 3 + i]) i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}\n","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this) {\n        QuatFunc.invert(this, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this) {\n        QuatFunc.conjugate(this, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this) {\n        QuatFunc.normalize(this, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this, qA, qB);\n        } else {\n            QuatFunc.multiply(this, this, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler) {\n        QuatFunc.fromEuler(this, euler, euler.order);\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this, axis, a);\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this, this, q, t);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a03 = a[3];\n        let a12 = a[6],\n            a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    let len = Math.hypot(x, y, z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) {\n        // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function () {\n    const temp = [0, 0, 0];\n\n    return function (out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n\n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n\n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n\n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n\n        return out;\n    };\n})();\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} target Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len === 0) {\n        // eye and target are in the same position\n        z2 = 1;\n    } else {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len === 0) {\n        // up and z are parallel\n        if (upz) {\n            upx += 1e-6;\n        } else if (upy) {\n            upz += 1e-6;\n        } else {\n            upy += 1e-6;\n        }\n        (x0 = upy * z2 - upz * z1), (x1 = upz * z0 - upx * z2), (x2 = upx * z1 - upy * z0);\n\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n    }\n\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}\n","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1,\n        m01 = 0,\n        m02 = 0,\n        m03 = 0,\n        m10 = 0,\n        m11 = 1,\n        m12 = 0,\n        m13 = 0,\n        m20 = 0,\n        m21 = 0,\n        m22 = 1,\n        m23 = 0,\n        m30 = 0,\n        m31 = 0,\n        m32 = 0,\n        m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(this, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === 'number' ? [v, v, v] : v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({ fov, aspect, near, far } = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({ left, right, bottom, top, near, far }) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.fromRotationTranslationScale(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        this[4] = a[o + 4];\n        this[5] = a[o + 5];\n        this[6] = a[o + 6];\n        this[7] = a[o + 7];\n        this[8] = a[o + 8];\n        this[9] = a[o + 9];\n        this[10] = a[o + 10];\n        this[11] = a[o + 11];\n        this[12] = a[o + 12];\n        this[13] = a[o + 13];\n        this[14] = a[o + 14];\n        this[15] = a[o + 15];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        a[o + 4] = this[4];\n        a[o + 5] = this[5];\n        a[o + 6] = this[6];\n        a[o + 7] = this[7];\n        a[o + 8] = this[8];\n        a[o + 9] = this[9];\n        a[o + 10] = this[10];\n        a[o + 11] = this[11];\n        a[o + 12] = this[12];\n        a[o + 13] = this[13];\n        a[o + 14] = this[14];\n        a[o + 15] = this[15];\n        return a;\n    }\n}\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport { Mat4 } from './Mat4.js';\n\nconst tmpMat4 = new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this, m, order);\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order) {\n        tmpMat4.fromQuaternion(q);\n        return this.fromRotationMatrix(tmpMat4, order);\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n}\n","// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Euler } from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation.onChange = () => this.quaternion.fromEuler(this.rotation);\n        this.quaternion.onChange = () => this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.getTranslation(this.position);\n        this.matrix.getRotation(this.quaternion);\n        this.matrix.getScaling(this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempMat4 = new Mat4();\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\n\nexport class Camera extends Transform {\n    constructor(gl, { near = 0.1, far = 100, fov = 45, aspect = 1, left, right, bottom, top, zoom = 1 } = {}) {\n        super();\n\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\n\n        this.projectionMatrix = new Mat4();\n        this.viewMatrix = new Mat4();\n        this.projectionViewMatrix = new Mat4();\n        this.worldPosition = new Vec3();\n\n        // Use orthographic if left/right set, else default to perspective camera\n        this.type = left || right ? 'orthographic' : 'perspective';\n\n        if (this.type === 'orthographic') this.orthographic();\n        else this.perspective();\n    }\n\n    perspective({ near = this.near, far = this.far, fov = this.fov, aspect = this.aspect } = {}) {\n        Object.assign(this, { near, far, fov, aspect });\n        this.projectionMatrix.fromPerspective({ fov: fov * (Math.PI / 180), aspect, near, far });\n        this.type = 'perspective';\n        return this;\n    }\n\n    orthographic({\n        near = this.near,\n        far = this.far,\n        left = this.left,\n        right = this.right,\n        bottom = this.bottom,\n        top = this.top,\n        zoom = this.zoom,\n    } = {}) {\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\n        left /= zoom;\n        right /= zoom;\n        bottom /= zoom;\n        top /= zoom;\n        this.projectionMatrix.fromOrthogonal({ left, right, bottom, top, near, far });\n        this.type = 'orthographic';\n        return this;\n    }\n\n    updateMatrixWorld() {\n        super.updateMatrixWorld();\n        this.viewMatrix.inverse(this.worldMatrix);\n        this.worldMatrix.getTranslation(this.worldPosition);\n\n        // used for sorting\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\n        return this;\n    }\n\n    lookAt(target) {\n        super.lookAt(target, true);\n        return this;\n    }\n\n    // Project 3D coordinate to 2D point\n    project(v) {\n        v.applyMatrix4(this.viewMatrix);\n        v.applyMatrix4(this.projectionMatrix);\n        return this;\n    }\n\n    // Unproject 2D point to 3D coordinate\n    unproject(v) {\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\n        v.applyMatrix4(this.worldMatrix);\n        return this;\n    }\n\n    updateFrustum() {\n        if (!this.frustum) {\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n        }\n\n        const m = this.projectionViewMatrix;\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\n\n        for (let i = 0; i < 6; i++) {\n            const invLen = 1.0 / this.frustum[i].distance();\n            this.frustum[i].multiply(invLen);\n            this.frustum[i].constant *= invLen;\n        }\n    }\n\n    frustumIntersectsMesh(node) {\n        // If no position attribute, treat as frustumCulled false\n        if (!node.geometry.attributes.position) return true;\n\n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\n\n        if (!node.geometry.bounds) return true;\n\n        const center = tempVec3a;\n        center.copy(node.geometry.bounds.center);\n        center.applyMatrix4(node.worldMatrix);\n\n        const radius = node.geometry.bounds.radius * node.worldMatrix.getMaxScaleOnAxis();\n\n        return this.frustumIntersectsSphere(center, radius);\n    }\n\n    frustumIntersectsSphere(center, radius) {\n        const normal = tempVec3b;\n\n        for (let i = 0; i < 6; i++) {\n            const plane = this.frustum[i];\n            const distance = normal.copy(plane).dot(center) + plane.constant;\n            if (distance < -radius) return false;\n        }\n        return true;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b01 = a22 * a11 - a12 * a21;\n    let b11 = -a22 * a10 + a12 * a20;\n    let b21 = a21 * a10 - a11 * a20;\n\n    // Calculate the determinant\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b00 = b[0],\n        b01 = b[1],\n        b02 = b[2];\n    let b10 = b[3],\n        b11 = b[4],\n        b12 = b[5];\n    let b20 = b[6],\n        b21 = b[7],\n        b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        x = v[0],\n        y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {mat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n}\n","import * as Mat3Func from './functions/Mat3Func.js';\n\nexport class Mat3 extends Array {\n    constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n        super(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        if (m00.length) return this.copy(m00);\n        Mat3Func.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat3Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, m = this) {\n        Mat3Func.rotate(this, m, v);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat3Func.scale(this, m, v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat3Func.multiply(this, ma, mb);\n        } else {\n            Mat3Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat3Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat3Func.copy(this, m);\n        return this;\n    }\n\n    fromMatrix4(m) {\n        Mat3Func.fromMat4(this, m);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat3Func.fromQuat(this, q);\n        return this;\n    }\n\n    fromBasis(vec3a, vec3b, vec3c) {\n        this.set(vec3a[0], vec3a[1], vec3a[2], vec3b[0], vec3b[1], vec3b[2], vec3c[0], vec3c[1], vec3c[2]);\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat3Func.invert(this, m);\n        return this;\n    }\n\n    getNormalMatrix(m) {\n        Mat3Func.normalFromMat4(this, m);\n        return this;\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat3 } from '../math/Mat3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nlet ID = 0;\n\nexport class Mesh extends Transform {\n    constructor(gl, { geometry, program, mode = gl.TRIANGLES, frustumCulled = true, renderOrder = 0 } = {}) {\n        super();\n        if (!gl.canvas) console.error('gl not passed as first argument to Mesh');\n        this.gl = gl;\n        this.id = ID++;\n        this.geometry = geometry;\n        this.program = program;\n        this.mode = mode;\n\n        // Used to skip frustum culling\n        this.frustumCulled = frustumCulled;\n\n        // Override sorting to force an order\n        this.renderOrder = renderOrder;\n        this.modelViewMatrix = new Mat4();\n        this.normalMatrix = new Mat3();\n        this.beforeRenderCallbacks = [];\n        this.afterRenderCallbacks = [];\n    }\n\n    onBeforeRender(f) {\n        this.beforeRenderCallbacks.push(f);\n        return this;\n    }\n\n    onAfterRender(f) {\n        this.afterRenderCallbacks.push(f);\n        return this;\n    }\n\n    draw({ camera } = {}) {\n        this.beforeRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n        if (camera) {\n            // Add empty matrix uniforms to program if unset\n            if (!this.program.uniforms.modelMatrix) {\n                Object.assign(this.program.uniforms, {\n                    modelMatrix: { value: null },\n                    viewMatrix: { value: null },\n                    modelViewMatrix: { value: null },\n                    normalMatrix: { value: null },\n                    projectionMatrix: { value: null },\n                    cameraPosition: { value: null },\n                });\n            }\n\n            // Set the matrix uniforms\n            this.program.uniforms.projectionMatrix.value = camera.projectionMatrix;\n            this.program.uniforms.cameraPosition.value = camera.worldPosition;\n            this.program.uniforms.viewMatrix.value = camera.viewMatrix;\n            this.modelViewMatrix.multiply(camera.viewMatrix, this.worldMatrix);\n            this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\n            this.program.uniforms.modelMatrix.value = this.worldMatrix;\n            this.program.uniforms.modelViewMatrix.value = this.modelViewMatrix;\n            this.program.uniforms.normalMatrix.value = this.normalMatrix;\n        }\n\n        // determine if faces need to be flipped - when mesh scaled negatively\n        let flipFaces = this.program.cullFace && this.worldMatrix.determinant() < 0;\n        this.program.use({ flipFaces });\n        this.geometry.draw({ mode: this.mode, program: this.program });\n        this.afterRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n    }\n}\n","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture {\n    constructor(\n        gl,\n        {\n            image,\n            target = gl.TEXTURE_2D,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == gl.TEXTURE_2D ? true : false,\n            anisotropy = 0,\n            level = 0,\n            width, // used for RenderTargets or Data Textures\n            height = width,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(\n                this.target,\n                this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT,\n                this.anisotropy\n            );\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        this.level,\n                        this.internalFormat,\n                        this.format,\n                        this.type,\n                        this.image[i]\n                    );\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, this.image);\n            } else if (this.image.isCompressedTexture) {\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage2D(\n                        this.target,\n                        level,\n                        this.internalFormat,\n                        this.image[level].width,\n                        this.image[level].height,\n                        0,\n                        this.image[level].data\n                    );\n                }\n            } else {\n                // Regular texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        0,\n                        this.gl.RGBA,\n                        1,\n                        1,\n                        0,\n                        this.gl.RGBA,\n                        this.gl.UNSIGNED_BYTE,\n                        emptyPixel\n                    );\n                }\n            } else if (this.width) {\n                // image intentionally left null for RenderTarget\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage2D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) return Vec2Func.cross(va, vb);\n        return Vec2Func.cross(this, va);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n        return this;\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        return a;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Sphere extends Geometry {\n    constructor(\n        gl,\n        {\n            radius = 0.5,\n            widthSegments = 16,\n            heightSegments = Math.ceil(widthSegments * 0.5),\n            phiStart = 0,\n            phiLength = Math.PI * 2,\n            thetaStart = 0,\n            thetaLength = Math.PI,\n            attributes = {},\n        } = {}\n    ) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const pStart = phiStart;\n        const pLength = phiLength;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let iv = 0;\n        let ii = 0;\n        let te = tStart + tLength;\n        const grid = [];\n\n        let n = new Vec3();\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let vRow = [];\n            let v = iy / hSegs;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let u = ix / wSegs;\n                let x = -radius * Math.cos(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n                let y = radius * Math.cos(tStart + v * tLength);\n                let z = radius * Math.sin(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n\n                position[i * 3] = x;\n                position[i * 3 + 1] = y;\n                position[i * 3 + 2] = z;\n\n                n.set(x, y, z).normalize();\n                normal[i * 3] = n.x;\n                normal[i * 3 + 1] = n.y;\n                normal[i * 3 + 2] = n.z;\n\n                uv[i * 2] = u;\n                uv[i * 2 + 1] = 1 - v;\n\n                vRow.push(iv++);\n            }\n\n            grid.push(vRow);\n        }\n\n        for (let iy = 0; iy < hSegs; iy++) {\n            for (let ix = 0; ix < wSegs; ix++) {\n                let a = grid[iy][ix + 1];\n                let b = grid[iy][ix];\n                let c = grid[iy + 1][ix];\n                let d = grid[iy + 1][ix + 1];\n\n                if (iy !== 0 || tStart > 0) {\n                    index[ii * 3] = a;\n                    index[ii * 3 + 1] = b;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n                if (iy !== hSegs - 1 || te < Math.PI) {\n                    index[ii * 3] = b;\n                    index[ii * 3 + 1] = c;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// Based from ThreeJS' OrbitControls class, rewritten using es6 with some additions and subtractions.\n// TODO: abstract event handlers so can be fed from other sources\n// TODO: make scroll zoom more accurate than just >/< zero\n// TODO: be able to pass in new camera position\n\nimport { Vec3 } from '../math/Vec3.js';\nimport { Vec2 } from '../math/Vec2.js';\n\nconst STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, DOLLY_PAN: 3 };\nconst tempVec3 = new Vec3();\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\n\nexport function Orbit(\n    object,\n    {\n        element = document,\n        enabled = true,\n        target = new Vec3(),\n        ease = 0.25,\n        inertia = 0.85,\n        enableRotate = true,\n        rotateSpeed = 0.1,\n        autoRotate = false,\n        autoRotateSpeed = 1.0,\n        enableZoom = true,\n        zoomSpeed = 1,\n        zoomStyle = 'dolly',\n        enablePan = true,\n        panSpeed = 0.1,\n        minPolarAngle = 0,\n        maxPolarAngle = Math.PI,\n        minAzimuthAngle = -Infinity,\n        maxAzimuthAngle = Infinity,\n        minDistance = 0,\n        maxDistance = Infinity,\n    } = {}\n) {\n    this.enabled = enabled;\n    this.target = target;\n    this.zoomStyle = zoomStyle;\n\n    // Catch attempts to disable - set to 1 so has no effect\n    ease = ease || 1;\n    inertia = inertia || 0;\n\n    this.minDistance = minDistance;\n    this.maxDistance = maxDistance;\n\n    // current position in sphericalTarget coordinates\n    const sphericalDelta = { radius: 1, phi: 0, theta: 0 };\n    const sphericalTarget = { radius: 1, phi: 0, theta: 0 };\n    const spherical = { radius: 1, phi: 0, theta: 0 };\n    const panDelta = new Vec3();\n\n    // Grab initial position values\n    const offset = new Vec3();\n    offset.copy(object.position).sub(this.target);\n    spherical.radius = sphericalTarget.radius = offset.distance();\n    spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n    spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n\n    this.offset = offset;\n\n    this.update = () => {\n        if (autoRotate) {\n            handleAutoRotate();\n        }\n\n        // apply delta\n        sphericalTarget.radius *= sphericalDelta.radius;\n        sphericalTarget.theta += sphericalDelta.theta;\n        sphericalTarget.phi += sphericalDelta.phi;\n\n        // apply boundaries\n        sphericalTarget.theta = Math.max(minAzimuthAngle, Math.min(maxAzimuthAngle, sphericalTarget.theta));\n        sphericalTarget.phi = Math.max(minPolarAngle, Math.min(maxPolarAngle, sphericalTarget.phi));\n        sphericalTarget.radius = Math.max(this.minDistance, Math.min(this.maxDistance, sphericalTarget.radius));\n\n        // ease values\n        spherical.phi += (sphericalTarget.phi - spherical.phi) * ease;\n        spherical.theta += (sphericalTarget.theta - spherical.theta) * ease;\n        spherical.radius += (sphericalTarget.radius - spherical.radius) * ease;\n\n        // apply pan to target. As offset is relative to target, it also shifts\n        this.target.add(panDelta);\n\n        // apply rotation to offset\n        let sinPhiRadius = spherical.radius * Math.sin(Math.max(0.000001, spherical.phi));\n        offset.x = sinPhiRadius * Math.sin(spherical.theta);\n        offset.y = spherical.radius * Math.cos(spherical.phi);\n        offset.z = sinPhiRadius * Math.cos(spherical.theta);\n\n        // Apply updated values to object\n        object.position.copy(this.target).add(offset);\n        object.lookAt(this.target);\n\n        // Apply inertia to values\n        sphericalDelta.theta *= inertia;\n        sphericalDelta.phi *= inertia;\n        panDelta.multiply(inertia);\n\n        // Reset scale every frame to avoid applying scale multiple times\n        sphericalDelta.radius = 1;\n    };\n\n    // Updates internals with new position\n    this.forcePosition = () => {\n        offset.copy(object.position).sub(this.target);\n        spherical.radius = sphericalTarget.radius = offset.distance();\n        spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n        spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n        object.lookAt(this.target);\n    };\n\n    // Everything below here just updates panDelta and sphericalDelta\n    // Using those two objects' values, the orbit is calculated\n\n    const rotateStart = new Vec2();\n    const panStart = new Vec2();\n    const dollyStart = new Vec2();\n\n    let state = STATE.NONE;\n    this.mouseButtons = { ORBIT: 0, ZOOM: 1, PAN: 2 };\n\n    function getZoomScale() {\n        return Math.pow(0.95, zoomSpeed);\n    }\n\n    function panLeft(distance, m) {\n        tempVec3.set(m[0], m[1], m[2]);\n        tempVec3.multiply(-distance);\n        panDelta.add(tempVec3);\n    }\n\n    function panUp(distance, m) {\n        tempVec3.set(m[4], m[5], m[6]);\n        tempVec3.multiply(distance);\n        panDelta.add(tempVec3);\n    }\n\n    const pan = (deltaX, deltaY) => {\n        let el = element === document ? document.body : element;\n        tempVec3.copy(object.position).sub(this.target);\n        let targetDistance = tempVec3.distance();\n        targetDistance *= Math.tan((((object.fov || 45) / 2) * Math.PI) / 180.0);\n        panLeft((2 * deltaX * targetDistance) / el.clientHeight, object.matrix);\n        panUp((2 * deltaY * targetDistance) / el.clientHeight, object.matrix);\n    };\n\n    const dolly = (dollyScale) => {\n        if (this.zoomStyle === 'dolly') sphericalDelta.radius /= dollyScale;\n        else {\n            object.fov /= dollyScale;\n            if (object.type === 'orthographic') object.orthographic();\n            else object.perspective();\n        }\n    };\n\n    function handleAutoRotate() {\n        const angle = ((2 * Math.PI) / 60 / 60) * autoRotateSpeed;\n        sphericalDelta.theta -= angle;\n    }\n\n    function handleMoveRotate(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, rotateStart).multiply(rotateSpeed);\n        let el = element === document ? document.body : element;\n        sphericalDelta.theta -= (2 * Math.PI * tempVec2b.x) / el.clientHeight;\n        sphericalDelta.phi -= (2 * Math.PI * tempVec2b.y) / el.clientHeight;\n        rotateStart.copy(tempVec2a);\n    }\n\n    function handleMouseMoveDolly(e) {\n        tempVec2a.set(e.clientX, e.clientY);\n        tempVec2b.sub(tempVec2a, dollyStart);\n        if (tempVec2b.y > 0) {\n            dolly(getZoomScale());\n        } else if (tempVec2b.y < 0) {\n            dolly(1 / getZoomScale());\n        }\n        dollyStart.copy(tempVec2a);\n    }\n\n    function handleMovePan(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, panStart).multiply(panSpeed);\n        pan(tempVec2b.x, tempVec2b.y);\n        panStart.copy(tempVec2a);\n    }\n\n    function handleTouchStartDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            dollyStart.set(0, distance);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            panStart.set(x, y);\n        }\n    }\n\n    function handleTouchMoveDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            tempVec2a.set(0, distance);\n            tempVec2b.set(0, Math.pow(tempVec2a.y / dollyStart.y, zoomSpeed));\n            dolly(tempVec2b.y);\n            dollyStart.copy(tempVec2a);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            handleMovePan(x, y);\n        }\n    }\n\n    const onMouseDown = (e) => {\n        if (!this.enabled) return;\n\n        switch (e.button) {\n            case this.mouseButtons.ORBIT:\n                if (enableRotate === false) return;\n                rotateStart.set(e.clientX, e.clientY);\n                state = STATE.ROTATE;\n                break;\n            case this.mouseButtons.ZOOM:\n                if (enableZoom === false) return;\n                dollyStart.set(e.clientX, e.clientY);\n                state = STATE.DOLLY;\n                break;\n            case this.mouseButtons.PAN:\n                if (enablePan === false) return;\n                panStart.set(e.clientX, e.clientY);\n                state = STATE.PAN;\n                break;\n        }\n\n        if (state !== STATE.NONE) {\n            window.addEventListener('mousemove', onMouseMove, false);\n            window.addEventListener('mouseup', onMouseUp, false);\n        }\n    };\n\n    const onMouseMove = (e) => {\n        if (!this.enabled) return;\n\n        switch (state) {\n            case STATE.ROTATE:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.clientX, e.clientY);\n                break;\n            case STATE.DOLLY:\n                if (enableZoom === false) return;\n                handleMouseMoveDolly(e);\n                break;\n            case STATE.PAN:\n                if (enablePan === false) return;\n                handleMovePan(e.clientX, e.clientY);\n                break;\n        }\n    };\n\n    const onMouseUp = () => {\n        window.removeEventListener('mousemove', onMouseMove, false);\n        window.removeEventListener('mouseup', onMouseUp, false);\n        state = STATE.NONE;\n    };\n\n    const onMouseWheel = (e) => {\n        if (!this.enabled || !enableZoom || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.deltaY < 0) {\n            dolly(1 / getZoomScale());\n        } else if (e.deltaY > 0) {\n            dolly(getZoomScale());\n        }\n    };\n\n    const onTouchStart = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                rotateStart.set(e.touches[0].pageX, e.touches[0].pageY);\n                state = STATE.ROTATE;\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchStartDollyPan(e);\n                state = STATE.DOLLY_PAN;\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchMove = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n        e.stopPropagation();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.touches[0].pageX, e.touches[0].pageY);\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchMoveDollyPan(e);\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchEnd = () => {\n        if (!this.enabled) return;\n        state = STATE.NONE;\n    };\n\n    const onContextMenu = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n    };\n\n    function addHandlers() {\n        element.addEventListener('contextmenu', onContextMenu, false);\n        element.addEventListener('mousedown', onMouseDown, false);\n        element.addEventListener('wheel', onMouseWheel, { passive: false });\n        element.addEventListener('touchstart', onTouchStart, { passive: false });\n        element.addEventListener('touchend', onTouchEnd, false);\n        element.addEventListener('touchmove', onTouchMove, { passive: false });\n    }\n\n    this.remove = function () {\n        element.removeEventListener('contextmenu', onContextMenu);\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('wheel', onMouseWheel);\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchend', onTouchEnd);\n        element.removeEventListener('touchmove', onTouchMove);\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n    };\n\n    addHandlers();\n}\n","import { Texture } from 'ogl';\r\n\r\n// not sure why this doesn't work locally\r\n/**\r\n * async loads image \r\n * @param src {string}\r\n * @returns {Promise<HTMLImageElement>}\r\n */\r\nasync function getImage(src) {\r\n    const response = await fetch(src, { mode: 'cors' });\r\n    const blob = await response.blob();\r\n\r\n    if (!!createImageBitmap) {\r\n        return await createImageBitmap(blob, { imageOrientation: 'flipY', premultiplyAlpha: 'none' });\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const urlLoader = (!!URL ? URL : webkitURL);\r\n        const objectUrl = urlLoader.createObjectURL(blob);\r\n        const img = new Image();\r\n        img.onload = () => {\r\n            resolve(img);\r\n            urlLoader.revokeObjectURL(objectUrl);\r\n        }\r\n        img.onerror = reject;\r\n        img.src = objectUrl;\r\n    });\r\n}\r\n\r\nfunction powerOfTwo(value) {\r\n    return Math.log2(value) % 1 === 0;\r\n}\r\n\r\n/**\r\n * loads image from source async\r\n * determines if image is mipmapable\r\n * returns a function that accepts a webglrendering context and returns a texture with provided options\r\n * @param src {string}\r\n * @returns {Promise<(gl: WebGLRenderingContext) => Texture>}\r\n */\r\nexport default async function loadTextureAsync(src) {\r\n    const image = await getImage(src);\r\n    const mipmapable = powerOfTwo(image.width) && powerOfTwo(image.height);\r\n\r\n    return (gl, options = {}) => {\r\n        const mipmapableOptions = mipmapable ? options : {\r\n            ...options,\r\n            generateMipmaps: false,\r\n            minFilter: gl.LINEAR,\r\n            wrapS: gl.CLAMP_TO_EDGE,\r\n            wrapT: gl.CLAMP_TO_EDGE,\r\n        };\r\n        const texture = new Texture(gl, {\r\n            ...mipmapableOptions, image\r\n        });\r\n\r\n        if (!!image.close) {\r\n            texture.onUpdate = () => {\r\n                texture.onUpdate = null;\r\n                image.close();\r\n            };\r\n        }\r\n\r\n        return texture;\r\n    };\r\n}","<svelte:options tag=\"svelte-panorama\" />\r\n\r\n<script context=\"module\">\r\n  import { Renderer, Sphere, Orbit, Mesh } from \"ogl\";\r\n  import { loadTextureAsync, makeCamera, makeProgram } from \"./gl\";\r\n</script>\r\n\r\n<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  let className = \"\";\r\n  export let alt = \"Panoramic View\";\r\n  export { className as class };\r\n  export let fov = 30;\r\n  export let src;\r\n\r\n  let wrapper;\r\n  let canvas;\r\n  let raf;\r\n\r\n  onMount(() => {\r\n    const loader = loadTextureAsync(src);\r\n    const { clientWidth, clientHeight } = wrapper;\r\n    const renderer = new Renderer({\r\n      canvas: canvas,\r\n      width: clientWidth,\r\n      height: clientHeight,\r\n    });\r\n\r\n    const gl = renderer.gl;\r\n    gl.clearColor(1, 1, 1, 1);\r\n\r\n    const sphere = new Sphere(gl, {\r\n      radius: 1,\r\n      widthSegments: 64,\r\n    });\r\n    console.log(sphere);\r\n\r\n    const camera = makeCamera(gl, fov, clientWidth, clientHeight);\r\n    const controls = new Orbit(camera, {\r\n      enablePan: false,\r\n      enableZoom: true,\r\n      //zoomStyle: 0,\r\n      element: canvas,\r\n      maxDistance: 1,\r\n      minDistance: 0,\r\n    });\r\n\r\n    const resizeObserver = new ResizeObserver((entries) =>\r\n      entries.every(({ target: { clientWidth, clientHeight } }) => {\r\n        renderer.setSize(clientWidth, clientHeight);\r\n        camera.perspective({ aspect: clientWidth / clientHeight });\r\n      })\r\n    );\r\n    resizeObserver.observe(wrapper);\r\n\r\n    loader.then((loaded) => {\r\n      const texture = loaded(gl);\r\n      const program = makeProgram(gl, texture);\r\n      const scene = new Mesh(gl, {\r\n        geometry: sphere,\r\n        program: program,\r\n      });\r\n\r\n      function update() {\r\n        controls.update();\r\n        renderer.render({ scene: scene, camera: camera });\r\n        raf = requestAnimationFrame(update);\r\n      }\r\n\r\n      raf = requestAnimationFrame(update);\r\n    });\r\n\r\n    return () => {\r\n      cancelAnimationFrame(raf);\r\n      resizeObserver.unobserve(wrapper);\r\n      resizeObserver.disconnect();\r\n    };\r\n  });\r\n</script>\r\n\r\n<div aria-label={alt} class={className} bind:this={wrapper}>\r\n  <canvas bind:this={canvas} />\r\n</div>\r\n\r\n<style>\r\n  div {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n</style>\r\n","import { Camera } from \"ogl\";\r\n\r\nexport default function makeCamera(gl, fov, width, height) {\r\n    const camera = new Camera(gl, {\r\n        fov: fov,\r\n        aspect: width / height,\r\n    });\r\n    camera.position.set(0, 0, 1);\r\n    return camera;\r\n}","import { Program } from \"ogl\";\r\n\r\nimport fragment from \"./shaders/fragment.glsl\";\r\nimport vertex from \"./shaders/vertex.glsl\";\r\n\r\nexport default function makeProgram(gl, texture) {\r\n    return new Program(gl, {\r\n        cullFace: gl.FRONT,\r\n        uniforms: {\r\n            tex: {\r\n                value: texture,\r\n            },\r\n        },\r\n        vertex: vertex,\r\n        fragment: fragment,\r\n    });\r\n}"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","insert","target","node","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","attr","attribute","value","removeAttribute","getAttribute","setAttribute","attribute_to_object","attributes","result","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_destroy","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","customElement","m","new_on_destroy","map","filter","mount_component","SvelteElement","x","y","z","Math","sqrt","copy","out","subtract","scale","squaredLength","normalize","len","dot","cross","ax","ay","az","bx","by","bz","HTMLElement","constructor","super","this","attachShadow","mode","connectedCallback","key","slotted","appendChild","attributeChangedCallback","_oldValue","newValue","disconnectedCallback","$destroy","detaching","d","destroy_component","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","angle","tempA","tempB","cosine","PI","acos","Vec3","v","set","Vec3Func.set","Vec3Func.copy","va","vb","Vec3Func.add","sub","Vec3Func.subtract","multiply","Vec3Func.scale","divide","inverse","Vec3Func.length","distance","Vec3Func.distance","squaredLen","Vec3Func.squaredLength","squaredDistance","Vec3Func.squaredDistance","negate","Vec3Func.cross","Vec3Func.normalize","Vec3Func.dot","equals","applyMatrix4","mat4","w","Vec3Func.transformMat4","scaleRotateMatrix4","Vec3Func.scaleRotateMat4","applyQuaternion","q","qx","qy","qz","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","Vec3Func.transformQuat","Vec3Func.angle","lerp","t","Vec3Func.lerp","clone","fromArray","o","toArray","transformDirection","tempVec3","ID","ATTR_ID","isBoundsWarned","arrayCacheF32","Program","gl","vertex","uniforms","transparent","cullFace","BACK","frontFace","CCW","depthTest","depthWrite","depthFunc","LESS","canvas","console","error","id","warn","blendFunc","blendEquation","src","renderer","premultipliedAlpha","setBlendFunc","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","addLineNumbers","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","uniformLocations","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","getUniformLocation","split","match","uniformName","isStructArray","structIndex","Number","structProperty","isNaN","isStruct","attributeLocations","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","getActiveAttrib","location","getAttribLocation","attributeOrder","join","dst","srcAlpha","dstAlpha","setBlendEquation","modeRGB","modeAlpha","applyState","enable","DEPTH_TEST","disable","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthMask","setDepthFunc","use","flipFaces","textureUnit","currentProgram","useProgram","activeUniform","undefined","texture","setUniform","textureUnits","CW","remove","deleteProgram","arrayLen","valueLen","Float32Array","flatten","setValue","state","get","slice","arraysEqual","setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","warnCount","message","Renderer","width","height","dpr","alpha","depth","stencil","antialias","preserveDrawingBuffer","powerPreference","autoClear","webgl","color","getContext","isWebgl2","setSize","ZERO","FUNC_ADD","depthMask","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","activeTextureUnit","boundBuffer","extensions","getExtension","vertexAttribDivisor","drawArraysInstanced","drawElementsInstanced","createVertexArray","bindVertexArray","deleteVertexArray","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","assign","style","setViewport","blendFuncSeparate","blendEquationSeparate","activeTexture","TEXTURE0","bindFramebuffer","FRAMEBUFFER","buffer","extension","webgl2Func","extFunc","bind","sortOpaque","renderOrder","zDepth","sortTransparent","sortUI","getRenderList","scene","camera","frustumCull","sort","renderList","updateFrustum","traverse","visible","draw","frustumCulled","frustumIntersectsMesh","opaque","ui","worldMatrix","getTranslation","projectionViewMatrix","concat","render","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","aw","bw","Quat","onChange","identity","QuatFunc.set","rotateX","rad","sin","cos","QuatFunc.rotateX","rotateY","QuatFunc.rotateY","rotateZ","QuatFunc.rotateZ","a0","a1","a2","a3","invDot","QuatFunc.invert","conjugate","QuatFunc.copy","QuatFunc.normalize","qA","qB","QuatFunc.multiply","QuatFunc.dot","fromMatrix3","matrix3","fRoot","fTrace","j","k","QuatFunc.fromMat3","fromEuler","euler","order","sx","cx","sy","cy","sz","cz","QuatFunc.fromEuler","fromAxisAngle","axis","s","QuatFunc.setAxisAngle","slerp","omega","cosom","sinom","scale0","scale1","QuatFunc.slerp","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","getScaling","mat","m11","m12","m13","m21","m22","m23","m31","m32","m33","hypot","getRotation","temp","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","Mat4","m00","m01","m02","m03","m10","m20","m30","Mat4Func.set","translate","Mat4Func.translate","rotate","b00","b01","b02","b10","b11","b12","b20","b21","b22","abs","Mat4Func.rotate","Mat4Func.scale","ma","mb","Mat4Func.multiply","fromPerspective","fov","aspect","near","far","fovy","f","tan","nf","Mat4Func.perspective","fromOrthogonal","left","right","bottom","top","lr","bt","Mat4Func.ortho","fromQuaternion","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","Mat4Func.fromQuat","setPosition","b03","b04","b05","b06","b07","b08","b09","det","Mat4Func.invert","compose","pos","xy","xz","yz","Mat4Func.fromRotationTranslationScale","Mat4Func.getRotation","Mat4Func.getScaling","getMaxScaleOnAxis","max","Mat4Func.getMaxScaleOnAxis","lookAt","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","Mat4Func.targetTo","determinant","Mat4Func.determinant","tmpMat4","Euler","reorder","fromRotationMatrix","asin","min","atan2","EulerFunc.fromRotationMatrix","Transform","parent","matrix","matrixAutoUpdate","position","quaternion","rotation","setParent","notifyParent","addChild","child","notifyChild","force","updateMatrix","worldMatrixNeedsUpdate","decompose","invert","tempMat4","tempVec3a","tempVec3b","Camera","zoom","projectionMatrix","viewMatrix","worldPosition","orthographic","perspective","project","unproject","frustum","constant","invLen","geometry","bounds","radius","Infinity","computeBoundingSphere","center","frustumIntersectsSphere","normal","plane","Mat3","Mat3Func.set","Mat3Func.translate","Mat3Func.rotate","Mat3Func.scale","Mat3Func.multiply","fromMatrix4","Mat3Func.fromQuat","fromBasis","vec3a","vec3b","vec3c","Mat3Func.invert","getNormalMatrix","Mat3Func.normalFromMat4","Mesh","TRIANGLES","modelViewMatrix","normalMatrix","beforeRenderCallbacks","afterRenderCallbacks","onBeforeRender","onAfterRender","mesh","modelMatrix","cameraPosition","emptyPixel","Uint8Array","isPowerOf2","Texture","image","TEXTURE_2D","UNSIGNED_BYTE","format","RGBA","internalFormat","wrapS","CLAMP_TO_EDGE","wrapT","generateMipmaps","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","magFilter","anisotropy","level","createTexture","store","glState","REPEAT","bindTexture","needsUpdate","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_CUBE_MAP","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","isCompressedTexture","compressedTexImage2D","data","generateMipmap","onUpdate","Vec2","Vec2Func.set","Vec2Func.add","Vec2Func.subtract","Vec2Func.scale","Vec2Func.length","Vec2Func.squaredLength","Vec2Func.cross","applyMatrix3","mat3","Vec2Func.transformMat4","Vec2Func.lerp","Sphere","VAOs","drawRange","start","count","instancedCount","currentGeometry","addAttribute","size","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","offset","byteLength","divisor","instanced","createBuffer","updateAttribute","isInstanced","bindBuffer","bufferData","STATIC_DRAW","setIndex","setDrawRange","setInstancedCount","createVAO","bindAttributes","numLoc","vertexAttribPointer","enableVertexAttribArray","drawElements","drawArrays","getPosition","computeBoundingBox","array","maxRadiusSq","deleteBuffer","widthSegments","heightSegments","ceil","phiStart","phiLength","thetaStart","thetaLength","wSegs","hSegs","pStart","pLength","tStart","tLength","num","numIndices","uv","Uint32Array","iv","ii","te","grid","n","iy","vRow","ix","u","STATE","tempVec2a","tempVec2b","Orbit","object","enabled","ease","inertia","enableRotate","rotateSpeed","autoRotate","autoRotateSpeed","enableZoom","zoomSpeed","zoomStyle","enablePan","panSpeed","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","maxDistance","sphericalDelta","phi","theta","sphericalTarget","spherical","panDelta","handleAutoRotate","sinPhiRadius","forcePosition","rotateStart","panStart","dollyStart","getZoomScale","pow","mouseButtons","ORBIT","ZOOM","PAN","pan","deltaX","deltaY","el","body","targetDistance","panLeft","clientHeight","panUp","dolly","dollyScale","handleMoveRotate","handleMovePan","onMouseDown","e","button","clientX","clientY","window","addEventListener","onMouseMove","onMouseUp","handleMouseMoveDolly","removeEventListener","onMouseWheel","stopPropagation","preventDefault","onTouchStart","touches","pageX","pageY","dx","dy","handleTouchStartDollyPan","onTouchMove","handleTouchMoveDollyPan","onTouchEnd","onContextMenu","passive","powerOfTwo","log2","async","loadTextureAsync","response","fetch","blob","createImageBitmap","imageOrientation","reject","urlLoader","URL","webkitURL","objectUrl","createObjectURL","img","Image","onload","revokeObjectURL","onerror","getImage","mipmapable","mipmapableOptions","close","append","wrapper","raf","className","alt","loader","clientWidth","clearColor","sphere","log","makeCamera","controls","resizeObserver","ResizeObserver","entries","every","observe","loaded","FRONT","tex","makeProgram","requestAnimationFrame","cancelAnimationFrame","unobserve","disconnect"],"mappings":"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"}