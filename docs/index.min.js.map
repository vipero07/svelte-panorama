{"version":3,"file":"index.min.js","sources":["../node_modules/.pnpm/svelte@3.44.0/node_modules/svelte/internal/index.mjs","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/functions/Vec3Func.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/Vec3.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/core/Geometry.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/core/Program.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/core/Renderer.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/functions/QuatFunc.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/functions/Vec4Func.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/Quat.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/functions/Mat4Func.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/Mat4.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/Euler.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/functions/EulerFunc.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/core/Transform.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/core/Camera.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/functions/Mat3Func.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/Mat3.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/core/Mesh.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/core/Texture.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/functions/Vec2Func.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/math/Vec2.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/extras/Sphere.js","../node_modules/.pnpm/ogl@0.0.76/node_modules/ogl/src/extras/Orbit.js","../src/loader.mjs","../src/Component.svelte"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n// TODO: when would I disableVertexAttribArray ?\n// TODO: use offset/stride if exists\n\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempVec3 = new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n\n        if (!attr.buffer) {\n            attr.buffer = this.gl.createBuffer();\n\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        this.gl.bufferData(attr.target, attr.data, this.gl.STATIC_DRAW);\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === 35674) numLoc = 2; // mat2\n            if (type === 35675) numLoc = 3; // mat3\n            if (type === 35676) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * numLoc;\n            const offset = numLoc === 1 ? 0 : numLoc * numLoc;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({ program, mode = this.gl.TRIANGLES }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, { name }) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * 2,\n                    this.instancedCount\n                );\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(mode, this.drawRange.count, this.attributes.index.type, this.attributes.index.offset + this.drawRange.start * 2);\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPosition() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        // if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return (isBoundsWarned = true);\n    }\n\n    computeBoundingBox(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const offset = attr.offset || 0;\n        const stride = attr.stride || attr.size;\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: check size of position (eg triangle with Vec2)\n        for (let i = offset, l = array.length; i < l; i += stride) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const offset = attr.offset || 0;\n        const stride = attr.stride || attr.size;\n\n        if (!this.bounds) this.computeBoundingBox(attr);\n\n        let maxRadiusSq = 0;\n        for (let i = offset, l = array.length; i < l; i += stride) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        for (let key in this.VAOs) {\n            this.gl.renderer.deleteVertexArray(this.VAOs[key]);\n            delete this.VAOs[key];\n        }\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}\n","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LESS,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as fist argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n\n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src)\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 35680:\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) this.gl = canvas.getContext('webgl', attributes);\n        if (!this.gl) console.error('unable to create webgl context');\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.gl.viewport(0, 0, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        modeRGB = modeRGB || this.gl.FUNC_ADD;\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let by = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bz = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if (1.0 - cosom > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0); // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot; // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0]) i = 1;\n        if (m[8] > m[i * 3 + i]) i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}\n","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this) {\n        QuatFunc.invert(this, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this) {\n        QuatFunc.conjugate(this, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this) {\n        QuatFunc.normalize(this, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this, qA, qB);\n        } else {\n            QuatFunc.multiply(this, this, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler) {\n        QuatFunc.fromEuler(this, euler, euler.order);\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this, axis, a);\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this, this, q, t);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a03 = a[3];\n        let a12 = a[6],\n            a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    let len = Math.hypot(x, y, z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) {\n        // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function () {\n    const temp = [0, 0, 0];\n\n    return function (out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n\n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n\n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n\n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n\n        return out;\n    };\n})();\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} target Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len === 0) {\n        // eye and target are in the same position\n        z2 = 1;\n    } else {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len === 0) {\n        // up and z are parallel\n        if (upz) {\n            upx += 1e-6;\n        } else if (upy) {\n            upz += 1e-6;\n        } else {\n            upy += 1e-6;\n        }\n        (x0 = upy * z2 - upz * z1), (x1 = upz * z0 - upx * z2), (x2 = upx * z1 - upy * z0);\n\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n    }\n\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}\n","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1,\n        m01 = 0,\n        m02 = 0,\n        m03 = 0,\n        m10 = 0,\n        m11 = 1,\n        m12 = 0,\n        m13 = 0,\n        m20 = 0,\n        m21 = 0,\n        m22 = 1,\n        m23 = 0,\n        m30 = 0,\n        m31 = 0,\n        m32 = 0,\n        m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(this, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === 'number' ? [v, v, v] : v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({ fov, aspect, near, far } = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({ left, right, bottom, top, near, far }) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.fromRotationTranslationScale(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        this[4] = a[o + 4];\n        this[5] = a[o + 5];\n        this[6] = a[o + 6];\n        this[7] = a[o + 7];\n        this[8] = a[o + 8];\n        this[9] = a[o + 9];\n        this[10] = a[o + 10];\n        this[11] = a[o + 11];\n        this[12] = a[o + 12];\n        this[13] = a[o + 13];\n        this[14] = a[o + 14];\n        this[15] = a[o + 15];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        a[o + 4] = this[4];\n        a[o + 5] = this[5];\n        a[o + 6] = this[6];\n        a[o + 7] = this[7];\n        a[o + 8] = this[8];\n        a[o + 9] = this[9];\n        a[o + 10] = this[10];\n        a[o + 11] = this[11];\n        a[o + 12] = this[12];\n        a[o + 13] = this[13];\n        a[o + 14] = this[14];\n        a[o + 15] = this[15];\n        return a;\n    }\n}\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport { Mat4 } from './Mat4.js';\n\nconst tmpMat4 = new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this, m, order);\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order) {\n        tmpMat4.fromQuaternion(q);\n        return this.fromRotationMatrix(tmpMat4, order);\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n}\n","// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Euler } from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation.onChange = () => this.quaternion.fromEuler(this.rotation);\n        this.quaternion.onChange = () => this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.getTranslation(this.position);\n        this.matrix.getRotation(this.quaternion);\n        this.matrix.getScaling(this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempMat4 = new Mat4();\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\n\nexport class Camera extends Transform {\n    constructor(gl, { near = 0.1, far = 100, fov = 45, aspect = 1, left, right, bottom, top, zoom = 1 } = {}) {\n        super();\n\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\n\n        this.projectionMatrix = new Mat4();\n        this.viewMatrix = new Mat4();\n        this.projectionViewMatrix = new Mat4();\n        this.worldPosition = new Vec3();\n\n        // Use orthographic if left/right set, else default to perspective camera\n        this.type = left || right ? 'orthographic' : 'perspective';\n\n        if (this.type === 'orthographic') this.orthographic();\n        else this.perspective();\n    }\n\n    perspective({ near = this.near, far = this.far, fov = this.fov, aspect = this.aspect } = {}) {\n        Object.assign(this, { near, far, fov, aspect });\n        this.projectionMatrix.fromPerspective({ fov: fov * (Math.PI / 180), aspect, near, far });\n        this.type = 'perspective';\n        return this;\n    }\n\n    orthographic({\n        near = this.near,\n        far = this.far,\n        left = this.left,\n        right = this.right,\n        bottom = this.bottom,\n        top = this.top,\n        zoom = this.zoom,\n    } = {}) {\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\n        left /= zoom;\n        right /= zoom;\n        bottom /= zoom;\n        top /= zoom;\n        this.projectionMatrix.fromOrthogonal({ left, right, bottom, top, near, far });\n        this.type = 'orthographic';\n        return this;\n    }\n\n    updateMatrixWorld() {\n        super.updateMatrixWorld();\n        this.viewMatrix.inverse(this.worldMatrix);\n        this.worldMatrix.getTranslation(this.worldPosition);\n\n        // used for sorting\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\n        return this;\n    }\n\n    lookAt(target) {\n        super.lookAt(target, true);\n        return this;\n    }\n\n    // Project 3D coordinate to 2D point\n    project(v) {\n        v.applyMatrix4(this.viewMatrix);\n        v.applyMatrix4(this.projectionMatrix);\n        return this;\n    }\n\n    // Unproject 2D point to 3D coordinate\n    unproject(v) {\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\n        v.applyMatrix4(this.worldMatrix);\n        return this;\n    }\n\n    updateFrustum() {\n        if (!this.frustum) {\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n        }\n\n        const m = this.projectionViewMatrix;\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\n\n        for (let i = 0; i < 6; i++) {\n            const invLen = 1.0 / this.frustum[i].distance();\n            this.frustum[i].multiply(invLen);\n            this.frustum[i].constant *= invLen;\n        }\n    }\n\n    frustumIntersectsMesh(node) {\n        // If no position attribute, treat as frustumCulled false\n        if (!node.geometry.attributes.position) return true;\n\n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\n\n        if (!node.geometry.bounds) return true;\n\n        const center = tempVec3a;\n        center.copy(node.geometry.bounds.center);\n        center.applyMatrix4(node.worldMatrix);\n\n        const radius = node.geometry.bounds.radius * node.worldMatrix.getMaxScaleOnAxis();\n\n        return this.frustumIntersectsSphere(center, radius);\n    }\n\n    frustumIntersectsSphere(center, radius) {\n        const normal = tempVec3b;\n\n        for (let i = 0; i < 6; i++) {\n            const plane = this.frustum[i];\n            const distance = normal.copy(plane).dot(center) + plane.constant;\n            if (distance < -radius) return false;\n        }\n        return true;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b01 = a22 * a11 - a12 * a21;\n    let b11 = -a22 * a10 + a12 * a20;\n    let b21 = a21 * a10 - a11 * a20;\n\n    // Calculate the determinant\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b00 = b[0],\n        b01 = b[1],\n        b02 = b[2];\n    let b10 = b[3],\n        b11 = b[4],\n        b12 = b[5];\n    let b20 = b[6],\n        b21 = b[7],\n        b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        x = v[0],\n        y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {mat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n}\n","import * as Mat3Func from './functions/Mat3Func.js';\n\nexport class Mat3 extends Array {\n    constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n        super(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        if (m00.length) return this.copy(m00);\n        Mat3Func.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat3Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, m = this) {\n        Mat3Func.rotate(this, m, v);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat3Func.scale(this, m, v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat3Func.multiply(this, ma, mb);\n        } else {\n            Mat3Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat3Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat3Func.copy(this, m);\n        return this;\n    }\n\n    fromMatrix4(m) {\n        Mat3Func.fromMat4(this, m);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat3Func.fromQuat(this, q);\n        return this;\n    }\n\n    fromBasis(vec3a, vec3b, vec3c) {\n        this.set(vec3a[0], vec3a[1], vec3a[2], vec3b[0], vec3b[1], vec3b[2], vec3c[0], vec3c[1], vec3c[2]);\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat3Func.invert(this, m);\n        return this;\n    }\n\n    getNormalMatrix(m) {\n        Mat3Func.normalFromMat4(this, m);\n        return this;\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat3 } from '../math/Mat3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nlet ID = 0;\n\nexport class Mesh extends Transform {\n    constructor(gl, { geometry, program, mode = gl.TRIANGLES, frustumCulled = true, renderOrder = 0 } = {}) {\n        super();\n        if (!gl.canvas) console.error('gl not passed as first argument to Mesh');\n        this.gl = gl;\n        this.id = ID++;\n        this.geometry = geometry;\n        this.program = program;\n        this.mode = mode;\n\n        // Used to skip frustum culling\n        this.frustumCulled = frustumCulled;\n\n        // Override sorting to force an order\n        this.renderOrder = renderOrder;\n        this.modelViewMatrix = new Mat4();\n        this.normalMatrix = new Mat3();\n        this.beforeRenderCallbacks = [];\n        this.afterRenderCallbacks = [];\n    }\n\n    onBeforeRender(f) {\n        this.beforeRenderCallbacks.push(f);\n        return this;\n    }\n\n    onAfterRender(f) {\n        this.afterRenderCallbacks.push(f);\n        return this;\n    }\n\n    draw({ camera } = {}) {\n        this.beforeRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n        if (camera) {\n            // Add empty matrix uniforms to program if unset\n            if (!this.program.uniforms.modelMatrix) {\n                Object.assign(this.program.uniforms, {\n                    modelMatrix: { value: null },\n                    viewMatrix: { value: null },\n                    modelViewMatrix: { value: null },\n                    normalMatrix: { value: null },\n                    projectionMatrix: { value: null },\n                    cameraPosition: { value: null },\n                });\n            }\n\n            // Set the matrix uniforms\n            this.program.uniforms.projectionMatrix.value = camera.projectionMatrix;\n            this.program.uniforms.cameraPosition.value = camera.worldPosition;\n            this.program.uniforms.viewMatrix.value = camera.viewMatrix;\n            this.modelViewMatrix.multiply(camera.viewMatrix, this.worldMatrix);\n            this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\n            this.program.uniforms.modelMatrix.value = this.worldMatrix;\n            this.program.uniforms.modelViewMatrix.value = this.modelViewMatrix;\n            this.program.uniforms.normalMatrix.value = this.normalMatrix;\n        }\n\n        // determine if faces need to be flipped - when mesh scaled negatively\n        let flipFaces = this.program.cullFace && this.worldMatrix.determinant() < 0;\n        this.program.use({ flipFaces });\n        this.geometry.draw({ mode: this.mode, program: this.program });\n        this.afterRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n    }\n}\n","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture {\n    constructor(\n        gl,\n        {\n            image,\n            target = gl.TEXTURE_2D,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == gl.TEXTURE_2D ? true : false,\n            anisotropy = 0,\n            level = 0,\n            width, // used for RenderTargets or Data Textures\n            height = width,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(\n                this.target,\n                this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT,\n                this.anisotropy\n            );\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        this.level,\n                        this.internalFormat,\n                        this.format,\n                        this.type,\n                        this.image[i]\n                    );\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, this.image);\n            } else if (this.image.isCompressedTexture) {\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage2D(\n                        this.target,\n                        level,\n                        this.internalFormat,\n                        this.image[level].width,\n                        this.image[level].height,\n                        0,\n                        this.image[level].data\n                    );\n                }\n            } else {\n                // Regular texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        0,\n                        this.gl.RGBA,\n                        1,\n                        1,\n                        0,\n                        this.gl.RGBA,\n                        this.gl.UNSIGNED_BYTE,\n                        emptyPixel\n                    );\n                }\n            } else if (this.width) {\n                // image intentionally left null for RenderTarget\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage2D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) return Vec2Func.cross(va, vb);\n        return Vec2Func.cross(this, va);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n        return this;\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        return a;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Sphere extends Geometry {\n    constructor(\n        gl,\n        {\n            radius = 0.5,\n            widthSegments = 16,\n            heightSegments = Math.ceil(widthSegments * 0.5),\n            phiStart = 0,\n            phiLength = Math.PI * 2,\n            thetaStart = 0,\n            thetaLength = Math.PI,\n            attributes = {},\n        } = {}\n    ) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const pStart = phiStart;\n        const pLength = phiLength;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let iv = 0;\n        let ii = 0;\n        let te = tStart + tLength;\n        const grid = [];\n\n        let n = new Vec3();\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let vRow = [];\n            let v = iy / hSegs;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let u = ix / wSegs;\n                let x = -radius * Math.cos(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n                let y = radius * Math.cos(tStart + v * tLength);\n                let z = radius * Math.sin(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n\n                position[i * 3] = x;\n                position[i * 3 + 1] = y;\n                position[i * 3 + 2] = z;\n\n                n.set(x, y, z).normalize();\n                normal[i * 3] = n.x;\n                normal[i * 3 + 1] = n.y;\n                normal[i * 3 + 2] = n.z;\n\n                uv[i * 2] = u;\n                uv[i * 2 + 1] = 1 - v;\n\n                vRow.push(iv++);\n            }\n\n            grid.push(vRow);\n        }\n\n        for (let iy = 0; iy < hSegs; iy++) {\n            for (let ix = 0; ix < wSegs; ix++) {\n                let a = grid[iy][ix + 1];\n                let b = grid[iy][ix];\n                let c = grid[iy + 1][ix];\n                let d = grid[iy + 1][ix + 1];\n\n                if (iy !== 0 || tStart > 0) {\n                    index[ii * 3] = a;\n                    index[ii * 3 + 1] = b;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n                if (iy !== hSegs - 1 || te < Math.PI) {\n                    index[ii * 3] = b;\n                    index[ii * 3 + 1] = c;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// Based from ThreeJS' OrbitControls class, rewritten using es6 with some additions and subtractions.\n// TODO: abstract event handlers so can be fed from other sources\n// TODO: make scroll zoom more accurate than just >/< zero\n// TODO: be able to pass in new camera position\n\nimport { Vec3 } from '../math/Vec3.js';\nimport { Vec2 } from '../math/Vec2.js';\n\nconst STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, DOLLY_PAN: 3 };\nconst tempVec3 = new Vec3();\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\n\nexport function Orbit(\n    object,\n    {\n        element = document,\n        enabled = true,\n        target = new Vec3(),\n        ease = 0.25,\n        inertia = 0.85,\n        enableRotate = true,\n        rotateSpeed = 0.1,\n        autoRotate = false,\n        autoRotateSpeed = 1.0,\n        enableZoom = true,\n        zoomSpeed = 1,\n        zoomStyle = 'dolly',\n        enablePan = true,\n        panSpeed = 0.1,\n        minPolarAngle = 0,\n        maxPolarAngle = Math.PI,\n        minAzimuthAngle = -Infinity,\n        maxAzimuthAngle = Infinity,\n        minDistance = 0,\n        maxDistance = Infinity,\n    } = {}\n) {\n    this.enabled = enabled;\n    this.target = target;\n    this.zoomStyle = zoomStyle;\n\n    // Catch attempts to disable - set to 1 so has no effect\n    ease = ease || 1;\n    inertia = inertia || 0;\n\n    this.minDistance = minDistance;\n    this.maxDistance = maxDistance;\n\n    // current position in sphericalTarget coordinates\n    const sphericalDelta = { radius: 1, phi: 0, theta: 0 };\n    const sphericalTarget = { radius: 1, phi: 0, theta: 0 };\n    const spherical = { radius: 1, phi: 0, theta: 0 };\n    const panDelta = new Vec3();\n\n    // Grab initial position values\n    const offset = new Vec3();\n    offset.copy(object.position).sub(this.target);\n    spherical.radius = sphericalTarget.radius = offset.distance();\n    spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n    spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n\n    this.offset = offset;\n\n    this.update = () => {\n        if (autoRotate) {\n            handleAutoRotate();\n        }\n\n        // apply delta\n        sphericalTarget.radius *= sphericalDelta.radius;\n        sphericalTarget.theta += sphericalDelta.theta;\n        sphericalTarget.phi += sphericalDelta.phi;\n\n        // apply boundaries\n        sphericalTarget.theta = Math.max(minAzimuthAngle, Math.min(maxAzimuthAngle, sphericalTarget.theta));\n        sphericalTarget.phi = Math.max(minPolarAngle, Math.min(maxPolarAngle, sphericalTarget.phi));\n        sphericalTarget.radius = Math.max(this.minDistance, Math.min(this.maxDistance, sphericalTarget.radius));\n\n        // ease values\n        spherical.phi += (sphericalTarget.phi - spherical.phi) * ease;\n        spherical.theta += (sphericalTarget.theta - spherical.theta) * ease;\n        spherical.radius += (sphericalTarget.radius - spherical.radius) * ease;\n\n        // apply pan to target. As offset is relative to target, it also shifts\n        this.target.add(panDelta);\n\n        // apply rotation to offset\n        let sinPhiRadius = spherical.radius * Math.sin(Math.max(0.000001, spherical.phi));\n        offset.x = sinPhiRadius * Math.sin(spherical.theta);\n        offset.y = spherical.radius * Math.cos(spherical.phi);\n        offset.z = sinPhiRadius * Math.cos(spherical.theta);\n\n        // Apply updated values to object\n        object.position.copy(this.target).add(offset);\n        object.lookAt(this.target);\n\n        // Apply inertia to values\n        sphericalDelta.theta *= inertia;\n        sphericalDelta.phi *= inertia;\n        panDelta.multiply(inertia);\n\n        // Reset scale every frame to avoid applying scale multiple times\n        sphericalDelta.radius = 1;\n    };\n\n    // Updates internals with new position\n    this.forcePosition = () => {\n        offset.copy(object.position).sub(this.target);\n        spherical.radius = sphericalTarget.radius = offset.distance();\n        spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n        spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n        object.lookAt(this.target);\n    };\n\n    // Everything below here just updates panDelta and sphericalDelta\n    // Using those two objects' values, the orbit is calculated\n\n    const rotateStart = new Vec2();\n    const panStart = new Vec2();\n    const dollyStart = new Vec2();\n\n    let state = STATE.NONE;\n    this.mouseButtons = { ORBIT: 0, ZOOM: 1, PAN: 2 };\n\n    function getZoomScale() {\n        return Math.pow(0.95, zoomSpeed);\n    }\n\n    function panLeft(distance, m) {\n        tempVec3.set(m[0], m[1], m[2]);\n        tempVec3.multiply(-distance);\n        panDelta.add(tempVec3);\n    }\n\n    function panUp(distance, m) {\n        tempVec3.set(m[4], m[5], m[6]);\n        tempVec3.multiply(distance);\n        panDelta.add(tempVec3);\n    }\n\n    const pan = (deltaX, deltaY) => {\n        let el = element === document ? document.body : element;\n        tempVec3.copy(object.position).sub(this.target);\n        let targetDistance = tempVec3.distance();\n        targetDistance *= Math.tan((((object.fov || 45) / 2) * Math.PI) / 180.0);\n        panLeft((2 * deltaX * targetDistance) / el.clientHeight, object.matrix);\n        panUp((2 * deltaY * targetDistance) / el.clientHeight, object.matrix);\n    };\n\n    const dolly = (dollyScale) => {\n        if (this.zoomStyle === 'dolly') sphericalDelta.radius /= dollyScale;\n        else {\n            object.fov /= dollyScale;\n            if (object.type === 'orthographic') object.orthographic();\n            else object.perspective();\n        }\n    };\n\n    function handleAutoRotate() {\n        const angle = ((2 * Math.PI) / 60 / 60) * autoRotateSpeed;\n        sphericalDelta.theta -= angle;\n    }\n\n    function handleMoveRotate(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, rotateStart).multiply(rotateSpeed);\n        let el = element === document ? document.body : element;\n        sphericalDelta.theta -= (2 * Math.PI * tempVec2b.x) / el.clientHeight;\n        sphericalDelta.phi -= (2 * Math.PI * tempVec2b.y) / el.clientHeight;\n        rotateStart.copy(tempVec2a);\n    }\n\n    function handleMouseMoveDolly(e) {\n        tempVec2a.set(e.clientX, e.clientY);\n        tempVec2b.sub(tempVec2a, dollyStart);\n        if (tempVec2b.y > 0) {\n            dolly(getZoomScale());\n        } else if (tempVec2b.y < 0) {\n            dolly(1 / getZoomScale());\n        }\n        dollyStart.copy(tempVec2a);\n    }\n\n    function handleMovePan(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, panStart).multiply(panSpeed);\n        pan(tempVec2b.x, tempVec2b.y);\n        panStart.copy(tempVec2a);\n    }\n\n    function handleTouchStartDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            dollyStart.set(0, distance);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            panStart.set(x, y);\n        }\n    }\n\n    function handleTouchMoveDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            tempVec2a.set(0, distance);\n            tempVec2b.set(0, Math.pow(tempVec2a.y / dollyStart.y, zoomSpeed));\n            dolly(tempVec2b.y);\n            dollyStart.copy(tempVec2a);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            handleMovePan(x, y);\n        }\n    }\n\n    const onMouseDown = (e) => {\n        if (!this.enabled) return;\n\n        switch (e.button) {\n            case this.mouseButtons.ORBIT:\n                if (enableRotate === false) return;\n                rotateStart.set(e.clientX, e.clientY);\n                state = STATE.ROTATE;\n                break;\n            case this.mouseButtons.ZOOM:\n                if (enableZoom === false) return;\n                dollyStart.set(e.clientX, e.clientY);\n                state = STATE.DOLLY;\n                break;\n            case this.mouseButtons.PAN:\n                if (enablePan === false) return;\n                panStart.set(e.clientX, e.clientY);\n                state = STATE.PAN;\n                break;\n        }\n\n        if (state !== STATE.NONE) {\n            window.addEventListener('mousemove', onMouseMove, false);\n            window.addEventListener('mouseup', onMouseUp, false);\n        }\n    };\n\n    const onMouseMove = (e) => {\n        if (!this.enabled) return;\n\n        switch (state) {\n            case STATE.ROTATE:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.clientX, e.clientY);\n                break;\n            case STATE.DOLLY:\n                if (enableZoom === false) return;\n                handleMouseMoveDolly(e);\n                break;\n            case STATE.PAN:\n                if (enablePan === false) return;\n                handleMovePan(e.clientX, e.clientY);\n                break;\n        }\n    };\n\n    const onMouseUp = () => {\n        window.removeEventListener('mousemove', onMouseMove, false);\n        window.removeEventListener('mouseup', onMouseUp, false);\n        state = STATE.NONE;\n    };\n\n    const onMouseWheel = (e) => {\n        if (!this.enabled || !enableZoom || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.deltaY < 0) {\n            dolly(1 / getZoomScale());\n        } else if (e.deltaY > 0) {\n            dolly(getZoomScale());\n        }\n    };\n\n    const onTouchStart = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                rotateStart.set(e.touches[0].pageX, e.touches[0].pageY);\n                state = STATE.ROTATE;\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchStartDollyPan(e);\n                state = STATE.DOLLY_PAN;\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchMove = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n        e.stopPropagation();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.touches[0].pageX, e.touches[0].pageY);\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchMoveDollyPan(e);\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchEnd = () => {\n        if (!this.enabled) return;\n        state = STATE.NONE;\n    };\n\n    const onContextMenu = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n    };\n\n    function addHandlers() {\n        element.addEventListener('contextmenu', onContextMenu, false);\n        element.addEventListener('mousedown', onMouseDown, false);\n        element.addEventListener('wheel', onMouseWheel, { passive: false });\n        element.addEventListener('touchstart', onTouchStart, { passive: false });\n        element.addEventListener('touchend', onTouchEnd, false);\n        element.addEventListener('touchmove', onTouchMove, { passive: false });\n    }\n\n    this.remove = function () {\n        element.removeEventListener('contextmenu', onContextMenu);\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('wheel', onMouseWheel);\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchend', onTouchEnd);\n        element.removeEventListener('touchmove', onTouchMove);\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n    };\n\n    addHandlers();\n}\n","import { Texture } from 'ogl';\r\n\r\n// not sure why this doesn't work locally\r\n// async function getImage(src) {\r\n//     const response = await fetch(src, { mode: 'cors' });\r\n//     const blob = await response.blob();\r\n//     const objectUrl = (URL ? URL : webkitURL).createObjectURL(blob);\r\n//     const img = new Image();\r\n//     img.src = objectUrl;\r\n//     return img;\r\n// }\r\n\r\n/**\r\n * async loads image \r\n * @param src {string}\r\n * @returns {Promise<HTMLImageElement>}\r\n */\r\nfunction getImage(src) {\r\n    return new Promise((resolve, reject) => {\r\n        const img = new Image();\r\n        img.crossOrigin = '';\r\n        img.onload = () => resolve(img);\r\n        img.onerror = reject;\r\n        img.src = src;\r\n    });\r\n}\r\n\r\nfunction powerOfTwo(value) {\r\n    return Math.log2(value) % 1 === 0;\r\n}\r\n\r\nexport async function loadTextureAsync(src) {\r\n    const image = await getImage(src);\r\n    const powerImage = powerOfTwo(image.width) && powerOfTwo(image.height);\r\n\r\n    return (gl) => {\r\n        const notPowerDefault = powerImage ? {} : {\r\n            generateMipmaps: false,\r\n            minFilter: gl.LINEAR,\r\n            wrapS: gl.CLAMP_TO_EDGE,\r\n            wrapT: gl.CLAMP_TO_EDGE,\r\n        };\r\n        return new Texture(gl, {\r\n            image, ...notPowerDefault\r\n        });\r\n    };\r\n}","<svelte:options tag=\"svelte-panorama\" />\r\n\r\n<script context=\"module\">\r\n  import { Renderer, Program, Mesh, Camera, Sphere, Orbit } from \"ogl\";\r\n  import { loadTextureAsync } from \"./loader.mjs\";\r\n  import fragment from \"./shaders/fragment.glsl\";\r\n  import vertex from \"./shaders/vertex.glsl\";\r\n</script>\r\n\r\n<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  let className = \"\";\r\n  export let alt = \"Panoramic View\";\r\n  export { className as class };\r\n  export let fov = 30;\r\n  export let src;\r\n\r\n  let clientHeight;\r\n  let clientWidth;\r\n  let wrapper;\r\n  let canvas;\r\n\r\n  let renderer;\r\n  let raf;\r\n  let gl;\r\n  let texture;\r\n\r\n  $: aspect = clientWidth / clientHeight;\r\n  $: camera = gl && wrapper && makeCamera();\r\n  $: controls = camera && canvas && makeControls();\r\n  $: scene = src && gl && texture && makeScene();\r\n  $: if (renderer && aspect) {\r\n    renderer.setSize(clientWidth, clientHeight);\r\n  }\r\n  $: if (camera && aspect) {\r\n    camera.perspective({ aspect: aspect });\r\n  }\r\n\r\n  function makeCamera() {\r\n    const camera = new Camera(gl, {\r\n      fov: fov,\r\n      aspect: wrapper.clientWidth / wrapper.clientHeight,\r\n    });\r\n    camera.position.set(0, 0, 1);\r\n    return camera;\r\n  }\r\n\r\n  function makeControls() {\r\n    return new Orbit(camera, {\r\n      enablePan: false,\r\n      enableZoom: true,\r\n      element: canvas,\r\n      maxDistance: 1,\r\n      minDistance: 0,\r\n    });\r\n  }\r\n\r\n  function makeScene() {\r\n    return new Mesh(gl, {\r\n      geometry: new Sphere(gl, {\r\n        radius: 1,\r\n        widthSegments: 64,\r\n      }),\r\n      program: new Program(gl, {\r\n        cullFace: gl.FRONT,\r\n        uniforms: {\r\n          tex: {\r\n            value: texture,\r\n          },\r\n        },\r\n        vertex: vertex,\r\n        fragment: fragment,\r\n      }),\r\n    });\r\n  }\r\n\r\n  function update() {\r\n    controls.update();\r\n    renderer.render({ scene: scene, camera: camera });\r\n    raf = requestAnimationFrame(update);\r\n  }\r\n\r\n  onMount(() => {\r\n    const loader = loadTextureAsync(src);\r\n\r\n    renderer = new Renderer({\r\n      canvas: canvas,\r\n      width: wrapper.clientWidth,\r\n      height: wrapper.clientHeight,\r\n    });\r\n\r\n    gl = renderer.gl;\r\n    gl.clearColor(1, 1, 1, 1);\r\n\r\n    loader.then((loaded) => {\r\n      texture = loaded(gl);\r\n      raf = requestAnimationFrame(update);\r\n    });\r\n\r\n    return () => cancelAnimationFrame(raf);\r\n  });\r\n</script>\r\n\r\n<div\r\n  aria-label={alt}\r\n  class={className}\r\n  bind:clientHeight\r\n  bind:clientWidth\r\n  bind:this={wrapper}\r\n>\r\n  <canvas bind:this={canvas} />\r\n</div>\r\n\r\n<style>\r\n  div {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n</style>\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","crossorigin","current_component","is_crossorigin","undefined","window","parent","error","attribute_to_object","attributes","result","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_destroy","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","customElement","m","new_on_destroy","map","filter","mount_component","SvelteElement","HTMLElement","constructor","super","this","attachShadow","mode","connectedCallback","key","slotted","attributeChangedCallback","_oldValue","newValue","disconnectedCallback","$destroy","detaching","d","destroy_component","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","x","y","z","Math","sqrt","copy","out","subtract","scale","squaredLength","normalize","len","dot","cross","ax","ay","az","bx","by","bz","angle","tempA","tempB","cosine","PI","acos","Vec3","v","set","Vec3Func.set","Vec3Func.copy","va","vb","Vec3Func.add","sub","Vec3Func.subtract","multiply","Vec3Func.scale","divide","inverse","Vec3Func.length","distance","Vec3Func.distance","squaredLen","Vec3Func.squaredLength","squaredDistance","Vec3Func.squaredDistance","negate","Vec3Func.cross","Vec3Func.normalize","Vec3Func.dot","equals","applyMatrix4","mat4","w","Vec3Func.transformMat4","scaleRotateMatrix4","Vec3Func.scaleRotateMat4","applyQuaternion","q","qx","qy","qz","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","Vec3Func.transformQuat","Vec3Func.angle","lerp","t","Vec3Func.lerp","clone","fromArray","o","toArray","transformDirection","tempVec3","ID","ATTR_ID","isBoundsWarned","arrayCacheF32","Program","gl","vertex","uniforms","transparent","cullFace","BACK","frontFace","CCW","depthTest","depthWrite","depthFunc","LESS","canvas","console","id","warn","blendFunc","blendEquation","src","renderer","premultipliedAlpha","setBlendFunc","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","addLineNumbers","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","uniformLocations","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","getUniformLocation","split","match","uniformName","isStructArray","structIndex","Number","structProperty","isNaN","isStruct","attributeLocations","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","getActiveAttrib","location","getAttribLocation","attributeOrder","join","dst","srcAlpha","dstAlpha","setBlendEquation","modeRGB","modeAlpha","applyState","enable","DEPTH_TEST","disable","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthMask","setDepthFunc","use","flipFaces","textureUnit","currentProgram","useProgram","activeUniform","texture","setUniform","textureUnits","CW","remove","deleteProgram","arrayLen","valueLen","Float32Array","flatten","setValue","state","get","slice","arraysEqual","setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","warnCount","message","Renderer","width","height","dpr","alpha","depth","stencil","antialias","preserveDrawingBuffer","powerPreference","autoClear","webgl","color","getContext","isWebgl2","setSize","ZERO","FUNC_ADD","depthMask","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","activeTextureUnit","boundBuffer","extensions","getExtension","vertexAttribDivisor","drawArraysInstanced","drawElementsInstanced","createVertexArray","bindVertexArray","deleteVertexArray","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","assign","style","setViewport","blendFuncSeparate","blendEquationSeparate","activeTexture","TEXTURE0","bindFramebuffer","FRAMEBUFFER","buffer","extension","webgl2Func","extFunc","bind","sortOpaque","renderOrder","zDepth","sortTransparent","sortUI","getRenderList","scene","camera","frustumCull","sort","renderList","updateFrustum","traverse","visible","draw","frustumCulled","frustumIntersectsMesh","opaque","ui","worldMatrix","getTranslation","projectionViewMatrix","concat","render","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","aw","bw","Quat","onChange","identity","QuatFunc.set","rotateX","rad","sin","cos","QuatFunc.rotateX","rotateY","QuatFunc.rotateY","rotateZ","QuatFunc.rotateZ","a0","a1","a2","a3","invDot","QuatFunc.invert","conjugate","QuatFunc.copy","QuatFunc.normalize","qA","qB","QuatFunc.multiply","QuatFunc.dot","fromMatrix3","matrix3","fRoot","fTrace","j","k","QuatFunc.fromMat3","fromEuler","euler","order","sx","cx","sy","cy","sz","cz","QuatFunc.fromEuler","fromAxisAngle","axis","s","QuatFunc.setAxisAngle","slerp","omega","cosom","sinom","scale0","scale1","QuatFunc.slerp","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","getScaling","mat","m11","m12","m13","m21","m22","m23","m31","m32","m33","hypot","getRotation","temp","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","Mat4","m00","m01","m02","m03","m10","m20","m30","Mat4Func.set","translate","Mat4Func.translate","rotate","b00","b01","b02","b10","b11","b12","b20","b21","b22","abs","Mat4Func.rotate","Mat4Func.scale","ma","mb","Mat4Func.multiply","fromPerspective","fov","aspect","near","far","fovy","f","tan","nf","Mat4Func.perspective","fromOrthogonal","left","right","bottom","top","lr","bt","Mat4Func.ortho","fromQuaternion","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","Mat4Func.fromQuat","setPosition","b03","b04","b05","b06","b07","b08","b09","det","Mat4Func.invert","compose","pos","xy","xz","yz","Mat4Func.fromRotationTranslationScale","Mat4Func.getRotation","Mat4Func.getScaling","getMaxScaleOnAxis","max","Mat4Func.getMaxScaleOnAxis","lookAt","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","Mat4Func.targetTo","determinant","Mat4Func.determinant","tmpMat4","Euler","reorder","fromRotationMatrix","asin","min","atan2","EulerFunc.fromRotationMatrix","Transform","matrix","matrixAutoUpdate","position","quaternion","rotation","setParent","notifyParent","addChild","child","notifyChild","force","updateMatrix","worldMatrixNeedsUpdate","decompose","invert","tempMat4","tempVec3a","tempVec3b","Camera","zoom","projectionMatrix","viewMatrix","worldPosition","orthographic","perspective","project","unproject","frustum","constant","invLen","geometry","bounds","radius","Infinity","computeBoundingSphere","center","frustumIntersectsSphere","normal","plane","Mat3","Mat3Func.set","Mat3Func.translate","Mat3Func.rotate","Mat3Func.scale","Mat3Func.multiply","fromMatrix4","Mat3Func.fromQuat","fromBasis","vec3a","vec3b","vec3c","Mat3Func.invert","getNormalMatrix","Mat3Func.normalFromMat4","Mesh","TRIANGLES","modelViewMatrix","normalMatrix","beforeRenderCallbacks","afterRenderCallbacks","onBeforeRender","onAfterRender","mesh","modelMatrix","cameraPosition","emptyPixel","Uint8Array","isPowerOf2","Texture","image","TEXTURE_2D","UNSIGNED_BYTE","format","RGBA","internalFormat","wrapS","CLAMP_TO_EDGE","wrapT","generateMipmaps","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","magFilter","anisotropy","level","createTexture","store","glState","REPEAT","bindTexture","needsUpdate","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_CUBE_MAP","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","isCompressedTexture","compressedTexImage2D","data","generateMipmap","onUpdate","Vec2","Vec2Func.set","Vec2Func.add","Vec2Func.subtract","Vec2Func.scale","Vec2Func.length","Vec2Func.squaredLength","Vec2Func.cross","applyMatrix3","mat3","Vec2Func.transformMat4","Vec2Func.lerp","Sphere","VAOs","drawRange","start","count","instancedCount","currentGeometry","addAttribute","size","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","offset","byteLength","divisor","instanced","createBuffer","updateAttribute","isInstanced","bindBuffer","bufferData","STATIC_DRAW","setIndex","setDrawRange","setInstancedCount","createVAO","bindAttributes","numLoc","vertexAttribPointer","enableVertexAttribArray","drawElements","drawArrays","getPosition","computeBoundingBox","array","maxRadiusSq","deleteBuffer","widthSegments","heightSegments","ceil","phiStart","phiLength","thetaStart","thetaLength","wSegs","hSegs","pStart","pLength","tStart","tLength","num","numIndices","uv","Uint32Array","iv","ii","te","grid","n","iy","vRow","ix","u","STATE","tempVec2a","tempVec2b","Orbit","object","enabled","ease","inertia","enableRotate","rotateSpeed","autoRotate","autoRotateSpeed","enableZoom","zoomSpeed","zoomStyle","enablePan","panSpeed","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","maxDistance","sphericalDelta","phi","theta","sphericalTarget","spherical","panDelta","handleAutoRotate","sinPhiRadius","forcePosition","rotateStart","panStart","dollyStart","getZoomScale","pow","mouseButtons","ORBIT","ZOOM","PAN","pan","deltaX","deltaY","el","body","targetDistance","panLeft","clientHeight","panUp","dolly","dollyScale","handleMoveRotate","handleMovePan","onMouseDown","e","button","clientX","clientY","onMouseMove","onMouseUp","handleMouseMoveDolly","onMouseWheel","stopPropagation","preventDefault","onTouchStart","touches","pageX","pageY","dx","dy","handleTouchStartDollyPan","onTouchMove","handleTouchMoveDollyPan","onTouchEnd","onContextMenu","passive","powerOfTwo","log2","async","loadTextureAsync","reject","img","Image","crossOrigin","onload","onerror","getImage","powerImage","notPowerDefault","getComputedStyle","iframe","tabIndex","unsubscribe","source","contentWindow","clientWidth","wrapper","raf","className","alt","controls","requestAnimationFrame","loader","clearColor","loaded","cancelAnimationFrame","makeCamera","FRONT","tex"],"mappings":"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"}